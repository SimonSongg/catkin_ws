<launch>
  <arg name="slave_robot"             default=""/>
  <!-- Arguments参数 -->
  <arg name="car_mode"  default="mini_akm" doc="opt: mini_akm, senior_akm, top_akm_bs, top_akm_dl"/>
  <!-- 用于robot_state_publisher节点-->
  <node pkg="tf" type="static_transform_publisher" name="base_to_link" args="0 0 0 0 0 0 $(arg slave_robot)/base_footprint $(arg slave_robot)/base_link 100" />
  <!-- 用于robot_pose_ekf节点-->
  <node pkg="tf" type="static_transform_publisher" name="base_to_gyro" args="0 0 0 0 0 0 $(arg slave_robot)/base_footprint $(arg slave_robot)/gyro_link 100" />

  <!-- 多机编队的从机位姿初始化-->
   <!--
   参数说明：
   multi_mode=0   ：表示编队模式为slave纵向编队，需要与robot_tf.launch中的mulit_mode相对应
   multi_mode=1   ：表示编队模式为row横向编队，需要与robot_tf.launch中的mulit_mode相对应
   slave_robot2=1 ：表示此时机器人为robot2，即编队中的1号从车，需要与wheeltec_slave.launch中slave_robot相对应
   slave_robot3=1 ：表示此时机器人为robot3，即编队中的2号从车，需要与wheeltec_slave.launch中slave_robot相对应
   注意：robot2和robot3的值不能相同
   -->
  <node name="pose_stter" pkg="wheeltec_multi" type="set_pose.py" args="0 0 0" output="screen" >
    <param name="multi_mode"      type="int" value="1" />
    <param name="slave_robot2"    type="int" value="1"  />
    <param name="slave_robot3"    type="int" value="0"  />
  </node>

  <!--坐标变换，需要实测 -->
  <!-- car_mode and tf  mini_akm-->
  <group if="$(eval car_mode == 'mini_akm')">
   <!-- 用于rplidar_ros节点，后面同理不再赘述-->
   <node pkg="tf" type="static_transform_publisher" name="base_to_laser" args="0.125 0.00 0.1608 3.14 0 0  $(arg slave_robot)/base_footprint $(arg slave_robot)/laser 100" />
   <!-- 用于摄像头相关节点，如3d建图导航，后面同理不再赘述-->
   <node pkg="tf" type="static_transform_publisher" name="base_to_camera" args="0.195 0.00 0.25 0 0 0   $(arg slave_robot)/base_footprint $(arg slave_robot)/camera_link 100" />
  </group>
  <!-- car_mode and tf  senior_akm-->
  <group if="$(eval car_mode == 'senior_akm')">
   <node pkg="tf" type="static_transform_publisher" name="base_to_laser" args="0.26 0.00 0.228 3.14 0 0  $(arg slave_robot)/base_footprint $(arg slave_robot)/laser 100" />
   <node pkg="tf" type="static_transform_publisher" name="base_to_camera" args="0.34 0.00 0.32 0 0 0   $(arg slave_robot)/base_footprint $(arg slave_robot)/camera_link 100" />
  </group>
  <!-- car_mode and tf  top_akm_bs-->
  <group if="$(eval car_mode == 'top_akm_bs')">
   <node pkg="tf" type="static_transform_publisher" name="base_to_laser" args="0.53 0.00 0.228 3.14 0 0  $(arg slave_robot)/base_footprint $(arg slave_robot)/laser 100" />
   <node pkg="tf" type="static_transform_publisher" name="base_to_camera" args="0.51 0.00 0.32 0 0 0   $(arg slave_robot)/base_footprint $(arg slave_robot)/camera_link 100" />
  </group>
  <!-- car_mode and tf  top_akm_dl-->
  <group if="$(eval car_mode == 'top_akm_dl')">
   <node pkg="tf" type="static_transform_publisher" name="base_to_laser" args="0.497 0.00 0.228 3.14 0 0  $(arg slave_robot)/base_footprint $(arg slave_robot)/laser 100" />
   <node pkg="tf" type="static_transform_publisher" name="base_to_camera" args="0.58 0.00 0.32 0 0 0   $(arg slave_robot)/base_footprint $(arg slave_robot)/camera_link 100" />
  </group>

   <!-- turn on lidar开启思岚雷达  -->
   <include file="$(find wheeltec_multi)/launch/include/rplidar.launch" >
    <arg name="slave_robot" value="$(arg slave_robot)"/>
   </include>
    <!-- turn on base_serial 开启底层单片机的控制节点  -->
   <include file="$(find wheeltec_multi)/launch/include/base_serial_akm.launch" >
     <arg name="slave_robot" value="$(arg slave_robot)"/>
   </include>
   <!-- turn on ekf 扩张卡尔曼滤波 -->
   <include file="$(find turn_on_wheeltec_robot)/launch/include/robot_pose_ekf.launch" />

  <!-- URDF 标准化机器人描述格式，即机器人可视化外形 -->
  <group if="$(eval car_mode == 'mini_akm')">
   <param name = "robot_description" textfile = "$(find wheeltec_robot_urdf)/urdf/mini_akm_robot.urdf"/> 
  </group>
  <group if="$(eval car_mode == 'senior_akm')">
   <param name = "robot_description" textfile = "$(find wheeltec_robot_urdf)/urdf/senior_akm_robot.urdf"/> 
  </group>
  <group if="$(eval car_mode == 'top_akm_bs')">
   <param name = "robot_description" textfile = "$(find wheeltec_robot_urdf)/urdf/top_akm_bs_robot.urdf"/> 
  </group>
  <group if="$(eval car_mode == 'top_akm_dl')">
   <param name = "robot_description" textfile = "$(find wheeltec_robot_urdf)/urdf/top_akm_dl_robot.urdf"/> 
  </group>

  <!-- 读取urdf信息(robot_description) 发布话题：/joint_states-->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  <!-- 订阅话题：/joint_states，发布小车TF信息-->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <!-- 机器人控制平滑包，该官方包不支持全向机器人 -->
   <include file="$(find turn_on_wheeltec_robot)/launch/include/velocity_smoother.launch" >

   </include>

 </launch>

